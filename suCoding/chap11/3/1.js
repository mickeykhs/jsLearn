/* 표준 내장 객체 사용 */
/* 문자열을 다루는 String 객체

    length : 문자열의 길이를 반환
    ----------메서드------------
    includes() : 문자열이 대상 문자열에 포함되어 있으면 true, 아니면 false를 반환
    replace() : 메서드의 매개변수에 인자로 전달되는 문자열과 일치하는 부분을 찾아 다른 데이터로 변경한 새로운 문자열 반환
    replaceAll() : replace()와 비슷하지만 모든 부분을 찾아서 다른 데이터로 변경한 새로운 문자열 반환
    split() : 구분자를 이용해 대상 문자열을 여러개의 문자열로 분리하고, 분리한 문자열을 새로운 배열로 반환
    toUpperCase() : 대상 문자열을 대문자로 변경해 반환
    trim() : 앞뒤 공백을 제거한 값을 반환
    indexOf() : 대상 문자열과 일치하는 첫 번째 문자의 인덱스를 반환
*/


/* 배열을 다루는 Array 객체

    length : 배열의 요소 개수를 반환
    ----------파괴적 메서드------------
    push() : 배열의 맨 뒤에 데이터를 추가
    pop() : 배열의 맨 뒤에서 데이터를 추출
    unshift() : 배열의 맨 앞에 데이터를 추가
    shift() : 배열의 맨 앞에서 데이터를 추출
    sort() : 배열의 요소를 정렬
    reverse() : 배열의 요소를 역순으로 정렬
    ----------비파괴적 메서드-----------
    forEach() : 배열의 요소를 순회하면서 요소마다 콜백(callback)함수를 호출
    filter() : 배열의 요소를 순회하면서 요소마다 콜백 함수를 호출해 true를 반환하는 요소만 추출 /추출한 요소를 새로운 배열로 만들고 만들어진 배열을 반환
    find() : 배열의 요소를 탐색하면서 주어진 판별 함수를 만족하는 첫 번째 값을 반환
    findIndex() : find()와 동일 다만 값 대신 숫자를 반환 
    includes() : 배열에 특정 값이 포함되어 있는지 확인 포함됐으면 true, 아니면 false를 반환
    join() : 배열의 모든 요소를 주어진 구분자로 합침
*/

const arr = [10, 20, 30];
for(let i=0; i<arr.length; i++){
    console.log(arr[i]);
}

const arr2 = [10, 20, 30, 40];
arr2.push(50);
console.log(arr2); // [10, 20, 30, 40, 50]
arr2.pop(); // 50을 추출
console.log(arr2); // [10, 20, 30, 40]
arr2.unshift(0); // 배열 맨앞에 0추가
console.log(arr2); // [0, 10, 20, 30, 40]
arr2.shift(); // 0을 추출
console.log(arr2); // [10, 20, 30, 40]

const arr3 = [10, 20, 30, 40];
arr3.forEach(function(v){
    console.log(v);
});
console.log(arr3); // [10, 20, 30, 40]